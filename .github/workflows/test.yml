name: Test

on: push

env:
  DOCKER_HUB_USERNAME: ${{ github.repository_owner }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  COMPOSE_FILE: docker-compose.test.yml
  DOCKER_IMAGE: ${{ github.repository }}

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/branch-tag

      - name: Docker login
        run: echo "$DOCKER_HUB_TOKEN" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin

      - name: Docker pull
        if: env.BRANCH_TAG != 'master' && env.BRANCH_TAG != 'development'
        run: docker-compose pull test

      - name: Docker build
        run: |
          bin/docker-prepare
          docker-compose build
          docker-compose push test

  unit_test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/branch-tag

      - name: Docker login
        run: echo "$DOCKER_HUB_TOKEN" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin

      - name: Docker pull
        run: docker-compose pull

      - name: Linters
        run: docker-compose run test yarn lint

      - name: RSpec
        run: docker-compose run test bundle exec rspec --exclude-pattern "spec/systems/**/*_spec.rb" --profile

  system_test:
    name: System test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/branch-tag

      - name: Docker login
        run: echo "$DOCKER_HUB_TOKEN" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin

      - name: Docker pull
        run: docker-compose pull

      - name: RSpec
        run: docker-compose run test bundle exec rspec spec/systems --profile

  docker_production_test:
    name: Docker production test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/branch-tag

      - name: Docker build production
        run: |
          bin/docker-prepare
          docker-compose -f docker-compose.yml build
